# kafka.bootstrap.server = localhost:9092
# kafka.bootstrap.server=localhost:9092
quarkus.application.name=cons-kafka-prod-kafka
# quarkus.otel.exporter.otlp.traces.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://jaeger-production-collector.tracing-system.svc.cluster.local:4317}
# quarkus.openshift.env.vars.otel-exporter-otlp-endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://jaeger-production-collector.tracing-system.svc.cluster.local:4317}
# quarkus.openshift.env.vars.otel-exporter-otlp-insecure=${OTEL_EXPORTER_OTLP_INSECURE:true}
# quarkus.kubernetes-client.trust-certs=true
# quarkus.s2i.base-jvm-image=registry.access.redhat.com/ubi9/openjdk-21
# quarkus.openshift.deploy=true
# teste
quarkus.kafka.devservices.topic-partitions."app.test.push"=3
quarkus.http.port=8084
kafka.bootstrap.server=localhost:9092
mp.messaging.incoming."app.test".connector=smallrye-kafka
mp.messaging.incoming."app.test".connector=smallrye-kafka
mp.messaging.incoming."app.test".topic=app.test
mp.messaging.incoming."app.test".key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming."app.test".value.deserializer=org.acme.mqtt.MqttSendMessageDeserializerKafka
mp.messaging.incoming."app.test.push".value.serializer=org.acme.mqtt.MqttSendMessageSerializer
mp.messaging.incoming."app.test.push".value.deserializer=org.acme.mqtt.MqttSendMessageDeserializerKafka
mp.messaging.incoming."app.test.push".topic=app.test.push
mp.messaging.incoming."app.test.push".connector=smallrye-kafka
mp.messaging.incoming."app.test".group.id=app-test-consumer-group
quarkus.kafka.devservices.port=9092
quarkus.kafka.devservices.provider=kafka-native
quarkus.kafka.devservices.topic-partitions."app.test"=3
quarkus.kafka.devservices.enabled=true